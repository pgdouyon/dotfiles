#!/usr/bin/env bash

# cd to dotfiles directory
BIN=$(cd "$(dirname "$0")" && pwd)
BASE=$(dirname "$BIN")
BACKUP_DIR=${HOME}/config_backup
cd "$BASE"

# link RC files
mkdir -pv "$BACKUP_DIR"
for rc in *; do
    if [[ -f $rc && ($rc != "README.md") && ($rc != "Brewfile") ]]; then
        dotfile="$HOME/.$rc"
        [[ -e $dotfile ]] && mv -v "$dotfile" "${BACKUP_DIR}/.${rc}"
        ln -sfv "${BASE}/${rc}" "$dotfile"
    fi
done

# link config directories
for dir in *; do
    if [[ -d $dir ]]; then
        dotdir="$HOME/.$dir"
        [[ -e $dotdir ]] && mv -v "$dotdir" "${BACKUP_DIR}/.${dir}"
        ln -sfv "${BASE}/${dir}" "$dotdir"
    fi
done
echo "Existing config files backed up to ${BACKUP_DIR}..."

mkdir -p "$XDG_CONFIG_HOME"
mkdir -p "$XDG_CACHE_HOME"
mkdir -p "$XDG_DATA_HOME"

ln -sfv "$XDG_CONFIG_HOME/nvim" "$HOME/.vim"

# git-prompt
if [[ ! -e $XDG_DATA_HOME/git-prompt.sh ]]; then
    curl https://raw.github.com/git/git/master/contrib/completion/git-prompt.sh \
        -o "$XDG_DATA_HOME/git-prompt.sh"
fi

# FZF
git clone https://github.com/junegunn/fzf.git "$XDG_DATA_HOME/fzf"
"$XDG_DATA_HOME/fzf/install" --all --no-update-rc
mv ~/.fzf.bash "$XDG_DATA_HOME/fzf/fzf.bash"
mv ~/.fzf.zsh "$XDG_DATA_HOME/fzf/fzf.zsh"

tmux source-file "$XDG_CONFIG_HOME/tmux/tmux.conf"

# Run script in a new shell to ensure the environment variables are properly set up
bash -l "${BIN}/install_packages"
